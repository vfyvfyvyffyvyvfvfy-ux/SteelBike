// Translations for SteelBike App
const translations = {
    ru: {
        // Navigation
        home: '–ì–ª–∞–≤–Ω–∞—è',
        map: '–ö–∞—Ä—Ç–∞',
        profile: '–ü—Ä–æ—Ñ–∏–ª—å',
        admin: '–ê–¥–º–∏–Ω',

        // Home page
        welcome: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SteelBike',
        rent_bike: '–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –≤–µ–ª–æ—Å–∏–ø–µ–¥',
        how_it_works: '–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç',
        not_registered: '–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã',
        register_via_bot: '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞',
        open_bot: '–û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞',
        authorization: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...',
        auth_error: '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
        find_and_rent: '–ù–∞–π—Ç–∏ –∏ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–≤–µ–ª–æ—Å–∏–ø–µ–¥ —Ä—è–¥–æ–º.',
        available_bikes: '–°–≤–æ–±–æ–¥–Ω—ã—Ö',
        tariffs: '–¢–∞—Ä–∏—Ñ—ã',
        enter_id: '–í–≤–µ—Å—Ç–∏ ID',
        book: '–ë—Ä–æ–Ω—å',
        days: '–¥–Ω–µ–π',

        // Map page
        available_bikes: '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã',
        battery_level: '–£—Ä–æ–≤–µ–Ω—å –∑–∞—Ä—è–¥–∞',
        distance: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ',
        rent_now: '–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å',
        select_point: '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ',
        available: '–°–≤–æ–±–æ–¥–Ω–æ',
        build_route: '–ü—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç',

        // Profile page
        my_profile: '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å',
        my_rentals: '–ú–æ–∏ –∞—Ä–µ–Ω–¥—ã',
        active_rental: '–ê–∫—Ç–∏–≤–Ω–∞—è –∞—Ä–µ–Ω–¥–∞',
        rental_history: '–ò—Å—Ç–æ—Ä–∏—è –∞—Ä–µ–Ω–¥',
        balance: '–ë–∞–ª–∞–Ω—Å',
        add_funds: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
        verification_status: '–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏',
        pending: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ',
        verified: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ',
        rejected: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
        linked_card: '–ü—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞',
        notifications: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
        support: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        city: '–ì–æ—Ä–æ–¥',
        choose_city: '–í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞',
        moscow: '–ú–æ—Å–∫–≤–∞',
        saint_petersburg: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
        write_to_telegram: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram',
        logout: '–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞',
        no_new_notifications: '–£ –≤–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.',
        payment_method: '–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã',
        no_linked_card: '–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å –µ–µ —Å–µ–π—á–∞—Å –∏–ª–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã.',
        link_card: '–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É',
        total_topups: '–í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π',
        total_expenses: '–í—Å–µ–≥–æ —Ä–∞—Å—Ö–æ–¥–æ–≤',

        // Rental
        start_time: '–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞',
        end_time: '–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è',
        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
        cost: '–°—Ç–æ–∏–º–æ—Å—Ç—å',
        bike_number: '–ù–æ–º–µ—Ä –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞',
        view_contract: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–≥–æ–≤–æ—Ä',
        end_rental: '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É',

        // Buttons
        save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
        cancel: '–û—Ç–º–µ–Ω–∞',
        close: '–ó–∞–∫—Ä—ã—Ç—å',
        confirm: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
        back: '–ù–∞–∑–∞–¥',
        next: '–î–∞–ª–µ–µ',

        // Messages
        loading: '–ó–∞–≥—Ä—É–∑–∫–∞...',
        error: '–û—à–∏–±–∫–∞',
        success: '–£—Å–ø–µ—à–Ω–æ',
        no_data: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',

        // Errors
        error_loading_data: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö',
        error_saving: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
        please_try_again: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',

        // Payment
        payment: '–û–ø–ª–∞—Ç–∞',
        pay: '–û–ø–ª–∞—Ç–∏—Ç—å',
        payment_method: '–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã',
        card: '–ö–∞—Ä—Ç–∞',

        // Support
        support: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
        contact_support: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π',
        faq: '–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã',

        // Modals
        bike_booking: '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞',
        enter_bike_id: '–í–≤–µ—Å—Ç–∏ ID –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞',
        bike_id: 'ID –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞',
        find_and_rent_btn: '–ù–∞–π—Ç–∏ –∏ –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å',
        booking_cost: '–°—Ç–æ–∏–º–æ—Å—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è',
        amount_charged: '–°—É–º–º–∞ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω–∞ —Å –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã –∏ –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å',
        booking_disclaimer: '–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–±–µ—Ä–µ—Ç–µ –≤–µ–ª–æ—Å–∏–ø–µ–¥, –±—Ä–æ–Ω—å –æ—Ç–º–µ–Ω–∏—Ç—Å—è, –∞ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –Ω–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ.',
        book_and_pay: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø–ª–∞—Ç–∏—Ç—å',
        topup_balance: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞',
        topup_amount: '–°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è',
        enter_amount_rub: '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ ‚ÇΩ',
        topup: '–ü–æ–ø–æ–ª–Ω–∏—Ç—å',
        no_bikes_available: '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤',
        paying_agree_terms: '–û–ø–ª–∞—á–∏–≤–∞—è, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ —Å–µ—Ä–≤–∏—Å–∞ –∏ –∞–≤—Ç–æ–ø–ª–∞—Ç–µ–∂–∞–º–∏.'
    },

    en: {
        // Navigation
        home: 'Home',
        map: 'Map',
        profile: 'Profile',
        admin: 'Admin',

        // Home page
        welcome: 'Welcome to SteelBike',
        rent_bike: 'Rent a bike',
        how_it_works: 'How it works',
        not_registered: 'You are not registered',
        register_via_bot: 'To use the service, you need to register via Telegram bot',
        open_bot: 'Open Bot',
        authorization: 'Authorization...',
        auth_error: 'Authorization Error',
        find_and_rent: 'Find and rent an electric bike nearby.',
        available_bikes: 'Available',
        tariffs: 'Tariffs',
        enter_id: 'Enter ID',
        book: 'Book',
        days: 'days',

        // Map page
        available_bikes: 'Available bikes',
        battery_level: 'Battery level',
        distance: 'Distance',
        rent_now: 'Rent now',
        select_point: 'Select a point on the map',
        available: 'Available',
        build_route: 'Build Route',

        // Profile page
        my_profile: 'My Profile',
        my_rentals: 'My Rentals',
        active_rental: 'Active Rental',
        rental_history: 'Rental History',
        balance: 'Balance',
        add_funds: 'Add Funds',
        verification_status: 'Verification Status',
        pending: 'Pending',
        verified: 'Verified',
        rejected: 'Rejected',
        linked_card: 'Linked Card',
        notifications: 'Notifications',
        city: 'City',
        choose_city: 'Choose City',
        moscow: 'Moscow',
        saint_petersburg: 'Saint Petersburg',
        write_to_telegram: 'Write to Telegram',
        logout: 'Logout',
        no_new_notifications: 'You have no new notifications.',
        payment_method: 'Payment Method',
        no_linked_card: 'You don\'t have a linked card yet. You can link it now or it will be automatically saved after the first successful payment.',
        link_card: 'Link Card',
        total_topups: 'Total Top-ups',
        total_expenses: 'Total Expenses',

        // Rental
        start_time: 'Start Time',
        end_time: 'End Time',
        duration: 'Duration',
        cost: 'Cost',
        bike_number: 'Bike Number',
        view_contract: 'View Contract',
        end_rental: 'End Rental',

        // Buttons
        save: 'Save',
        cancel: 'Cancel',
        close: 'Close',
        confirm: 'Confirm',
        back: 'Back',
        next: 'Next',

        // Messages
        loading: 'Loading...',
        error: 'Error',
        success: 'Success',
        no_data: 'No data',

        // Errors
        error_loading_data: 'Error loading data',
        error_saving: 'Error saving',
        please_try_again: 'Please try again',

        // Payment
        payment: 'Payment',
        pay: 'Pay',
        payment_method: 'Payment Method',
        card: 'Card',

        // Support
        support: 'Support',
        contact_support: 'Contact Support',
        faq: 'FAQ',

        // Modals
        bike_booking: 'Bike Booking',
        enter_bike_id: 'Enter Bike ID',
        bike_id: 'Bike ID',
        find_and_rent_btn: 'Find and Rent',
        booking_cost: 'Booking Cost',
        amount_charged: 'The amount will be charged from your card and credited to your balance',
        booking_disclaimer: 'If you don\'t pick up the bike, the booking will be cancelled and the money will remain in your balance.',
        book_and_pay: 'Book and Pay',
        topup_balance: 'Top Up Balance',
        topup_amount: 'Top Up Amount',
        enter_amount_rub: 'Enter amount in ‚ÇΩ',
        topup: 'Top Up',
        no_bikes_available: 'No bikes available',
        paying_agree_terms: 'By paying, you agree to the terms of service and autopayments.'
    }
};

// Helper function to get translation
function t(key, lang = 'en') {
    const keys = key.split('.');
    let value = translations[lang];

    for (const k of keys) {
        if (value && typeof value === 'object') {
            value = value[k];
        } else {
            return key; // Return key if translation not found
        }
    }

    return value || key;
}

// Get user language from localStorage or default to Russian
function getUserLanguage() {
    const lang = localStorage.getItem('userLanguage') || 'ru';
    console.log('üåç [LANG] getUserLanguage() returning:', lang);
    return lang;
}

// Set user language
function setUserLanguage(lang) {
    localStorage.setItem('userLanguage', lang);
    updatePageLanguage();
}

// Update all elements with data-i18n attribute
function updatePageLanguage() {
    const lang = getUserLanguage();
    console.log('üåç [LANG] updatePageLanguage() called, lang:', lang);
    console.log('üåç [LANG] Sample translation test - linked_card:', t('linked_card', lang));

    const elementsWithI18n = document.querySelectorAll('[data-i18n]');
    console.log('üåç [LANG] Found', elementsWithI18n.length, 'elements with data-i18n');

    elementsWithI18n.forEach(element => {
        const key = element.getAttribute('data-i18n');
        const translation = t(key, lang);
        console.log('üåç [LANG] Translating:', key, '‚Üí', translation, '| Key exists in translations:', key in (translations[lang] || {}));
        element.textContent = translation;
    });

    // Update placeholders
    const elementsWithPlaceholder = document.querySelectorAll('[data-i18n-placeholder]');
    console.log('üåç [LANG] Found', elementsWithPlaceholder.length, 'elements with data-i18n-placeholder');

    elementsWithPlaceholder.forEach(element => {
        const key = element.getAttribute('data-i18n-placeholder');
        element.placeholder = t(key, lang);
    });

    console.log('üåç [LANG] updatePageLanguage() completed');
}

// Initialize language on page load
document.addEventListener('DOMContentLoaded', () => {
    console.log('üåç [LANG] DOMContentLoaded in translations.js');
    console.log('üåç [LANG] Current localStorage.userLanguage:', localStorage.getItem('userLanguage'));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–∑—ã–∫ –∏–∑ URL (–µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –∏–∑ –±–æ—Ç–∞)
    const urlParams = new URLSearchParams(window.location.search);
    const langFromUrl = urlParams.get('lang');
    console.log('üåç [LANG] URL param lang:', langFromUrl);

    if (langFromUrl && (langFromUrl === 'ru' || langFromUrl === 'en')) {
        console.log('üåç [LANG] Setting language from URL:', langFromUrl);
        setUserLanguage(langFromUrl);
    }

    console.log('üåç [LANG] Calling updatePageLanguage() from DOMContentLoaded...');
    updatePageLanguage();
});
