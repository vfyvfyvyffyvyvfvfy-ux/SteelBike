import { getClient, getActiveRental, createPayment } from './api.js';
import { renderDefaultView, renderActiveRentalView, renderOverdueRentalView, renderPendingReturnView } from './ui.js';

function initializeModals() {
    const modals = document.querySelectorAll('.modal-overlay');
    modals.forEach(modal => {
        const closeBtn = modal.querySelector('.modal-close');
        if (closeBtn) {
            closeBtn.addEventListener('click', () => modal.classList.add('hidden'));
        }
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.add('hidden');
            }
        });
    });
}

function initializeMainScreenEventListeners(currentUser) {
    const scanBtn = document.getElementById('scan-qr-btn');
    const balanceCard = document.getElementById('balance-card');
    const idInputBtn = document.getElementById('id-input-btn');
    const bookingBtn = document.getElementById('booking-btn');
    const rentBtn = document.getElementById('rent-btn');
    const topupModal = document.getElementById('topup-modal');
    const idInputModal = document.getElementById('id-input-modal');
    const bookingListModal = document.getElementById('booking-list-modal');
    const qrModal = document.getElementById('qr-modal');

    if (scanBtn) {
        scanBtn.addEventListener('click', () => {
            qrModal.classList.remove('hidden');
        });
    }

    if (balanceCard) {
        balanceCard.addEventListener('click', () => {
            topupModal.classList.remove('hidden');
        });
    }

    if (idInputBtn) {
        idInputBtn.addEventListener('click', () => {
            idInputModal.classList.remove('hidden');
        });
    }

    if (bookingBtn) {
        bookingBtn.addEventListener('click', () => {
            bookingListModal.classList.remove('hidden');
        });
    }

    if (rentBtn) {
        rentBtn.addEventListener('click', async () => {
            try {
                const data = await createPayment(currentUser.id, '00001', 1);
                if (data.confirmation_url) {
                    window.location.href = data.confirmation_url;
                }
            } catch (error) {
                alert('Ошибка: ' + error.message);
            }
        });
    }
}

document.addEventListener('DOMContentLoaded', () => {
    if (localStorage.getItem('isRegistered') !== 'true') {
        window.location.replace('start.html');
        return;
    }

    async function initializeRentalSystem() {
        const mainContent = document.querySelector('.app-main');
        const appHeader = document.querySelector('.app-header h1');
        const userId = localStorage.getItem('userId');

        if (!userId) {
            localStorage.clear();
            window.location.replace('start.html');
            return;
        }

        const currentUser = await getClient(userId);
        if (!currentUser) {
            localStorage.clear();
            window.location.replace('start.html');
            return;
        }

        appHeader.textContent = `Привет, ${currentUser.name.split(' ')[0]}!`;

        const activeRental = await getActiveRental(userId);

        if (activeRental) {
            switch(activeRental.status) {
                case 'active': 
                    renderActiveRentalView(mainContent, activeRental); 
                    break;
                case 'overdue': 
                    renderOverdueRentalView(mainContent, activeRental); 
                    break;
                case 'pending_return': 
                    renderPendingReturnView(mainContent, activeRental); 
                    break;
                default: 
                    renderDefaultView(mainContent);
                    initializeMainScreenEventListeners(currentUser);
            }
        } else {
            renderDefaultView(mainContent);
            initializeMainScreenEventListeners(currentUser);
        }
    }

    initializeRentalSystem();
    initializeModals();
});
