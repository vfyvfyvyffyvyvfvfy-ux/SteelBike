#!/usr/bin/env node

// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OCR –≤–æ—Ä–∫–µ—Ä–∞
require('dotenv').config();
const axios = require('axios');

const TEST_USER_ID = 'test-user-123';
const TEST_FILE_IDS = [
  {
    field: 'ru_passport_main',
    file_id: 'test_file_id_1',
    file_unique_id: 'test_unique_1'
  }
];

async function testWorker() {
  const workerUrl = process.env.OCR_WORKER_URL || 'http://localhost:3000';
  const internalSecret = process.env.INTERNAL_SECRET;

  if (!internalSecret) {
    console.error('‚ùå INTERNAL_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env');
    process.exit(1);
  }

  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OCR –≤–æ—Ä–∫–µ—Ä–∞...');
  console.log(`üåê URL –≤–æ—Ä–∫–µ—Ä–∞: ${workerUrl}`);
  console.log(`üë§ Test User ID: ${TEST_USER_ID}`);
  console.log(`üìÑ Test Files: ${TEST_FILE_IDS.length}`);

  try {
    const response = await axios.post(`${workerUrl}/process-document`, {
      userId: TEST_USER_ID,
      fileIds: TEST_FILE_IDS
    }, {
      headers: {
        'Content-Type': 'application/json',
        'X-Internal-Secret': internalSecret
      },
      timeout: 30000
    });

    console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!');
    console.log('üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', JSON.stringify(response.data, null, 2));

  } catch (error) {
    console.error('‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è:');
    if (error.response) {
      console.error(`üìä –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error('üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
    } else if (error.code === 'ECONNREFUSED') {
      console.error('üö´ –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      console.error('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm start');
    } else {
      console.error('üîç –û—à–∏–±–∫–∞:', error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testWorker();
}

module.exports = { testWorker };